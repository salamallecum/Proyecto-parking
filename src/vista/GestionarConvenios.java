package vista;

import com.sun.glass.events.KeyEvent;
import controlador.ConvenioControlador;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import modelo.Convenio;
import modelo.Parqueadero;
import org.apache.log4j.Logger;


/**
 *
 * @author ALEJO
 */
public class GestionarConvenios extends javax.swing.JFrame {
      
    Parqueadero espacio;
    public static DefaultTableModel modeloTablaConvenios;
    int Fila;
    int FilaAnterior;
    
    ConvenioControlador convenioControla = new ConvenioControlador();
    Convenio nuevoConvenio = new Convenio();
    Convenio editConvenio = new Convenio();
    
    private final Logger log = Logger.getLogger(GestionarConvenios.class);
    private URL url = GestionarConvenios.class.getResource("Log4j.properties");
    
    /**
     * Creates new form nuevoUsuario
     */
    public GestionarConvenios() {       
        initComponents();
        setSize(677, 561);
        setResizable(false);
        setTitle("Gestionar convenios");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        
        convenioControla.cargarTablaConvenios();
        
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("icons/icoConvenio.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btn_editar = new javax.swing.JButton();
        btn_ingresar = new javax.swing.JButton();
        txt_nombreConvenio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_listaConvenios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_monto = new javax.swing.JTextField();
        cmb_frecuencia = new javax.swing.JComboBox<>();
        btn_eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconImage(getIconImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Nombre de convenio:");

        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit-validated_40458.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.setEnabled(false);
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_ingresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Save_icon-icons.com_73702.png"))); // NOI18N
        btn_ingresar.setText("Ingresar");
        btn_ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ingresarActionPerformed(evt);
            }
        });

        txt_nombreConvenio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_nombreConvenioFocusGained(evt);
            }
        });
        txt_nombreConvenio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nombreConvenioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombreConvenioKeyTyped(evt);
            }
        });

        table_listaConvenios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Monto ($)", "Frecuencia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_listaConvenios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_listaConveniosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_listaConvenios);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Monto ($):");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Frecuencia:");

        txt_monto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_montoKeyTyped(evt);
            }
        });

        cmb_frecuencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "DIARIO", "MENSUAL", "QUINCENAL", "SEMESTRAL", "TRIMESTRAL", "ANUAL" }));

        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ic_delete_128_28267.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.setEnabled(false);
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_nombreConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_monto, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cmb_frecuencia, javax.swing.GroupLayout.Alignment.LEADING, 0, 122, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_ingresar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_editar)
                            .addComponent(btn_eliminar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nombreConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_ingresar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_monto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmb_frecuencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_eliminar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Metodo boton Ingresar
    private void btn_ingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ingresarActionPerformed
        encapsularConvenio();
    }//GEN-LAST:event_btn_ingresarActionPerformed

    private void txt_nombreConvenioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreConvenioKeyTyped
        //Forza aescribir en mayuscula
        char c=evt.getKeyChar();
        if(Character.isLowerCase(c)){
            evt.setKeyChar(Character.toUpperCase(c));
        }
        
        //Cuenta la cantidad maxima de caracteres
        int numeroCaracteres = 30;
        if(txt_nombreConvenio.getText().length()== numeroCaracteres){
            evt.consume();
            JOptionPane.showMessageDialog(null,"Solo 30 caracteres");
            txt_nombreConvenio.setText("");
        }    
    }//GEN-LAST:event_txt_nombreConvenioKeyTyped

    private void table_listaConveniosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_listaConveniosMouseClicked
       
        Fila = table_listaConvenios.getSelectedRow();
        int cantidadFilas = table_listaConvenios.getSelectedRowCount();
                             
        String nombreConvenio = table_listaConvenios.getValueAt(Fila, 0).toString();
            
        //No deja editar el convenio ninguno
        if(nombreConvenio.equals("NINGUNO")){
            JOptionPane.showMessageDialog(null, "No Permitido");
            btn_editar.setEnabled(false);
            btn_eliminar.setEnabled(false);
            btn_ingresar.setEnabled(true);
            Limpiar();
        }else{
            btn_editar.setEnabled(true);
            btn_eliminar.setEnabled(true);
            btn_ingresar.setEnabled(false);
            
            Convenio convenioRescatado = convenioControla.traerUnConvenioAlFormulario(nombreConvenio);
            txt_nombreConvenio.setText(convenioRescatado.getNombre());
            txt_monto.setText(convenioRescatado.getMonto());
            cmb_frecuencia.setSelectedItem(convenioRescatado.getFrecuencia());                  
        }     
    }//GEN-LAST:event_table_listaConveniosMouseClicked

    private void txt_nombreConvenioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreConvenioKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            Limpiar();
            btn_editar.setEnabled(false);
            btn_ingresar.setEnabled(true);
            btn_eliminar.setEnabled(false);
        }
    }//GEN-LAST:event_txt_nombreConvenioKeyPressed

    //Metodo del boton editar
    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        actualizarConvenio();
    }//GEN-LAST:event_btn_editarActionPerformed

    private void txt_montoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_montoKeyTyped
        //Cuenta la cantidad maxima de caracteres
        int numeroCaracteres = 20;
        if(txt_monto.getText().length()== numeroCaracteres){
            evt.consume();
            JOptionPane.showMessageDialog(null,"Solo 20 caracteres");
            txt_monto.setText("");
        }
        
        //Evalua que se digiten numeros no letras
        char validar = evt.getKeyChar();
        
        if(Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
            
            JOptionPane.showMessageDialog(rootPane, "Ingrese solo numeros.");
        }
    }//GEN-LAST:event_txt_montoKeyTyped

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        eliminarConvenio();
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void txt_nombreConvenioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_nombreConvenioFocusGained
        
    }//GEN-LAST:event_txt_nombreConvenioFocusGained

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cerrarGestorConvenios();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionarConvenios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionarConvenios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionarConvenios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarConvenios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    //Esto cambia la apariencia de la app para que se acomode al Siste Operativo
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    new GestionarConvenios().setVisible(true);
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    //Logger.getLogger(GestionarConvenios.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_ingresar;
    private javax.swing.JComboBox<String> cmb_frecuencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable table_listaConvenios;
    private javax.swing.JTextField txt_monto;
    private javax.swing.JTextField txt_nombreConvenio;
    // End of variables declaration//GEN-END:variables
 
    //Metodo que crea un objeto de tipo Convenio
    public void encapsularConvenio(){
       
        int validacion= 0;
        int frecuencia_cmb = 0;
        String nombreConvenio, monto, frecuencia_string = "";
        
        nombreConvenio = txt_nombreConvenio.getText().trim();
        monto = txt_monto.getText().trim();
        frecuencia_cmb = cmb_frecuencia.getSelectedIndex() + 1;
                       
        if(nombreConvenio.equals("")){
            txt_nombreConvenio.setBackground(Color.red);
            validacion++;
        }
        
        if(monto.equals("")){
            txt_monto.setBackground(Color.red);
            validacion++;
        }
        
        if(frecuencia_cmb == 1){
            frecuencia_string = "Seleccione";
            cmb_frecuencia.setBackground(Color.red);
            validacion++;
        } else if(frecuencia_cmb == 2){
            frecuencia_string = "DIARIO";
        }else if(frecuencia_cmb == 3){
            frecuencia_string = "MENSUAL";
        }else if(frecuencia_cmb == 4){
            frecuencia_string = "QUINCENAL";
        }else if(frecuencia_cmb == 5){
            frecuencia_string = "SEMESTRAL";
        }else if(frecuencia_cmb == 6){
            frecuencia_string = "TRIMESTRAL";
        }else if(frecuencia_cmb == 7){
            frecuencia_string = "ANUAL";
        }
        
        boolean elConvenioYaExiste = convenioControla.validarExistenciaDeConvenio(nombreConvenio);
        
        if(elConvenioYaExiste){
            txt_nombreConvenio.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "El convenio indicado ya se encuentra registrado.");
            Limpiar();
            Normalizar();
        }else{
            if(validacion == 0){
                
                //Encapsulamos el objeto Convenio
                nuevoConvenio.setId(0);
                nuevoConvenio.setNombre(nombreConvenio);
                nuevoConvenio.setMonto(monto);
                nuevoConvenio.setFrecuencia(frecuencia_string);
                
                convenioControla.crearConvenio(nuevoConvenio);
                                
                Object[] fila = new Object[3];
                fila[0] = nombreConvenio;
                fila[1] = monto;
                fila[2] = frecuencia_string;
                modeloTablaConvenios.addRow(fila);

                txt_nombreConvenio.setBackground(Color.GREEN);
                txt_monto.setBackground(Color.GREEN);
                cmb_frecuencia.setBackground(Color.GREEN);
                JOptionPane.showMessageDialog(null, "Convenio registrado satisfactoriamente.");
                Limpiar();
                Normalizar(); 
            
            }else{
                JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos.");
                Normalizar();
            }
        }          
    }     
    
    //Metodo que actualiza un convenio
    public void actualizarConvenio(){
        
        int validacion= 0;
        int frecuencia_cmb = 0;
        String nombreConvenio, monto, frecuencia_string = "";
        boolean elConvenioYaExiste = false;
        nombreConvenio = txt_nombreConvenio.getText().trim();
        monto = txt_monto.getText().trim();
        frecuencia_cmb = cmb_frecuencia.getSelectedIndex() + 1;
                       
        if(nombreConvenio.equals("")){
            txt_nombreConvenio.setBackground(Color.red);
            validacion++;
        }
        
        if(monto.equals("")){
            txt_monto.setBackground(Color.red);
            validacion++;
        }
        
        if(frecuencia_cmb == 1){
            frecuencia_string = "Seleccione";
            cmb_frecuencia.setBackground(Color.red);
            validacion++;
        } else if(frecuencia_cmb == 2){
            frecuencia_string = "DIARIO";
        }else if(frecuencia_cmb == 3){
            frecuencia_string = "MENSUAL";
        }else if(frecuencia_cmb == 4){
            frecuencia_string = "QUINCENAL";
        }else if(frecuencia_cmb == 5){
            frecuencia_string = "SEMESTRAL";
        }else if(frecuencia_cmb == 6){
            frecuencia_string = "TRIMESTRAL";
        }else if(frecuencia_cmb == 7){
            frecuencia_string = "ANUAL";
        }
        
                
        if (validacion == 0) {

            FilaAnterior = table_listaConvenios.getSelectedRow();
            String nombre = table_listaConvenios.getValueAt(FilaAnterior, 0).toString();

            //Encapsulamos el objeto
            editConvenio.setNombre(nombreConvenio);
            editConvenio.setMonto(monto);
            editConvenio.setFrecuencia(frecuencia_string);

            convenioControla.actualizarConvenio(nombre, editConvenio);

            Object Fila[] = new Object[3];
            Fila[0] = txt_nombreConvenio.getText();
            Fila[1] = txt_monto.getText();
            Fila[2] = frecuencia_string;

            modeloTablaConvenios.addRow(Fila);
            modeloTablaConvenios.removeRow(FilaAnterior);
            btn_editar.setEnabled(false);
            btn_ingresar.setEnabled(true);
            btn_eliminar.setEnabled(false);

            txt_nombreConvenio.setBackground(Color.GREEN);
            txt_monto.setBackground(Color.GREEN);
            cmb_frecuencia.setBackground(Color.GREEN);
            JOptionPane.showMessageDialog(null, "Convenio actualizado satisfactoriamente.");
            Limpiar();
            Normalizar();   

        } else {
            JOptionPane.showMessageDialog(null, "Debes llenar todos los campos.");
            Normalizar();
        }
    }
    
    //Metodo que prepara el objeto Convenio  para eliminarse
    public void eliminarConvenio(){
        
        Fila = table_listaConvenios.getSelectedRow();
        int cantidadFilas = table_listaConvenios.getSelectedRowCount();
        
                 
        if(cantidadFilas == 0){
            JOptionPane.showMessageDialog(null, "Seleccione el parqueadero que desea eliminar.");
        }else{    
            
            int decision = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea eliminar?", "Eliminar parqueadero", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            String nombreConvenio = table_listaConvenios.getValueAt(Fila, 0).toString();
            
            if(decision == JOptionPane.YES_OPTION){
                
                int idDelConvenio = convenioControla.consultarIdDeunConvenio(nombreConvenio);
                boolean convenioEnUso = convenioControla.evaluarSiElConvenioEstaEnUso(idDelConvenio);
                
                if(convenioEnUso){
                    JOptionPane.showMessageDialog(null, "El convenio indicado está siendo implementado actualmente.");
                }else{
                    convenioControla.eliminarConvenio(nombreConvenio);
                    modeloTablaConvenios.removeRow(Fila);
                    Limpiar();
                    btn_editar.setEnabled(false);
                    btn_eliminar.setEnabled(false);
                    btn_ingresar.setEnabled(true);
                }
            }else if(decision == JOptionPane.NO_OPTION){}
        } 
    }
 
    //Metodo que limpia el formulario en caso de ingresar tablero principal
    public void Limpiar(){
        txt_nombreConvenio.setText("");
        txt_monto.setText("");
        cmb_frecuencia.setSelectedIndex(0);
    }
    
    //Metodo que normaliza el formulario en caso tablero compartido
    public void Normalizar(){
        txt_nombreConvenio.setBackground(Color.WHITE);
        txt_monto.setBackground(Color.WHITE);
        cmb_frecuencia.setBackground(Color.WHITE);
    }
    
     //Metodo que se invoca al cerrar el jFrame
    private void cerrarGestorConvenios(){
        
        String botones[] = {"Cerrar", "Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(this, "¿Está seguro que desea cerrar?", "Administrador de convenios", 0, 0, null, botones, this);
        
        if(eleccion == JOptionPane.YES_OPTION){
            dispose();
            PanelParametros.btn_convenios.setEnabled(true);
        }
    }
}


